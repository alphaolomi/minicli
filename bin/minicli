#!/usr/bin/env php
<?php

if (php_sapi_name() !== 'cli') {
    exit;
}


if (file_exists(__DIR__ . '/../../../autoload.php')) {
    require __DIR__ . '/../../../autoload.php';
} else {
    require __DIR__ . '/../vendor/autoload.php';
}


use App\Config\AppConfig;
use App\Config\TermwindOutputHandler;
use App\Services\PlatesService;
use App\Services\TermwindService;
use Minicli\App;
use Minicli\Exception\CommandNotFoundException;

$appPath = dirname(__DIR__) . '/app/Command';

$app = new App([
    'app_path' => [
        $appPath,
    ],
    'debug' => false
]);

// Register Termwind Service
$app->addService('termwind', new TermwindService());

// Register Plates Service
$app->addService('plates', new PlatesService());

// Register Termwind Output Handler
$app->setOutputHandler(new TermwindOutputHandler());


/* Add configs using env vars and json files */
try {
    $config = (new AppConfig)->load();
    foreach ($config as $key => $value) {
        $app->config->{$key} = $value;
    }
    if ($app->config->debug) {
        $app->getPrinter()->log("Debug mode is ON.");
        $app->getPrinter()->log("Config loaded.");
    }
} catch (Exception $exception) {
    if ($app->config->debug) {
        $app->getPrinter()->error("An error occurred:");
        $app->getPrinter()->error($exception->getMessage());
    }
    return 1;
}

try {
    $app->runCommand($argv);
} catch (CommandNotFoundException $notFoundException) {
    $app->getPrinter()->error("Command Not Found.");
    return 1;
} catch (Exception $exception) {
    if ($app->config->debug) {
        $app->getPrinter()->error("An error occurred:");
        $app->getPrinter()->error($exception->getMessage());
    }
    return 1;
}

return 0;
